@page
@model SuperCoolBooks.Pages.Books.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Book</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.ISBN)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.ISBN)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.ImagePath)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.ImagePath)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.isDeleted)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.isDeleted)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.Created)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.Created)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.ReleaseDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.ReleaseDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.User)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.User.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Book.BookId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Book.BookId)
        </dd>

    </dl>
</div>
<div>
    <a asp-page="./Edit" asp-route-id="@Model.Book?.BookId">Edit</a> |
    <a asp-page="./Index">Back to List</a>
</div>

@*Code for Leaving a review along with javascript for the character counter, for the moment the userId is hardcoded to be = 1*@

<div class="row">
    <div class="col-md-4" style="width:40rem">
        <h2>Leave a review</h2>
        <form asp-page-handler="AsyncReview" method="post" >
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Review.BookId" />
            <div class="form-group">
                <label asp-for="Review.Title" class="control-label"></label>
                <input asp-for="Review.Title" class="form-control" placeholder="Title..." maxlength="255"/>
                <span asp-validation-for="Review.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Review.ReviewText" class="control-label"></label>
                <textarea asp-for="Review.ReviewText" class="form-control" rows="11" placeholder="Enter text here..." id="reviewTextArea" maxlength="1000"></textarea>
                <div id="charCount"></div>
                <span asp-validation-for="Review.ReviewText" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Review.Rating" class="control-label"></label>
                <select asp-for="Review.Rating" class="form-control">
                    <option value="">Select a rating</option>
                    <option value="1">1 star</option>
                    <option value="2">2 stars</option>
                    <option value="3">3 stars</option>
                    <option value="4">4 stars</option>
                    <option value="5">5 stars</option>
                </select>
                <span asp-validation-for="Review.Rating" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="hidden" asp-for="Review.BookId" value=""/>
                @*Make it so UserID is equal to the logged in user*@
                <input type="hidden" asp-for="Review.UserId" value="1"/>
                <input type="submit" value="Submit" class="btn btn-primary mt-2" />
            </div>

        </form>
    </div>
</div>


      <div>
          <h2>Reviews</h2>
    @if (Model.Reviews == null || Model.Reviews.Count <=0)
    {
        <p>There are no reviews for this book yet</p>
    }
    else
    {
        @Html.Partial("_ExistingReviews", Model.Reviews)
        @*<partial name="_ExistingReviews"/>*@
    }

      </div>


  <script>
      const textarea = document.getElementById("reviewTextArea");
      const charCount = document.getElementById("charCount");
      const maxChars = 1000;

      // Display initial "characters remaining" indicator
      const remainingChars = maxChars - textarea.value.length;
      charCount.textContent = `${remainingChars} characters remaining`;

      // Attach event listener to update indicator on input
      textarea.addEventListener("input", function() {
        const remainingChars = maxChars - textarea.value.length;
        charCount.textContent = `${remainingChars} characters remaining`;
      });
  </script>